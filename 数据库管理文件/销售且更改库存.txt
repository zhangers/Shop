#include <stdio.h>
#include "mysql.h"
#include<iostream>
#include <sstream>
using namespace std;
void main()
{
 char sql[150]; // sql语句
 MYSQL mysql; //一个数据库结构体
 MYSQL_RES* res; //一个结果集结构体
 MYSQL_ROW row; //char** 二维数组，存放一条条记录
 //初始化数据库
 mysql_init(&mysql);
 //设置编码方式
 mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");
 //连接数据库
 //判断如果连接失败就把连接失败的信息显示出来，我们好进行对应修改。
 // mysql_real_connect参数：2.本地地址 3.你的mysql用户名 4.你的mysql密码 5.数据库名字 6.端口号
 if (mysql_real_connect(&mysql, "localhost", "root", "1234", "goods", 3306, NULL, 0) == NULL) {
  cout << (mysql_error(&mysql));
 }
 int amount1;
 char a[256];
 string amount1_str;
 cout << "请输入商品号" << endl;
 string ID;
 cin >> ID;
 cout << endl;
 cout << "请输入购买数量" << endl;
 int num;
 cin >> num;
 int money;
 //查询数据
 mysql_query(&mysql, "SELECT * from goods");
 //获取结果集
 res = mysql_store_result(&mysql);
 //显示数据
 //给ROW赋值，判断ROW是否为空，不为空就打印数据。
 while (row = mysql_fetch_row(res))
 {
  string i;
  string amount;
  string price;
  i = row[1];
  amount = row[2];
  price = row[3];
  if (ID == i)
  {

   int price1;
   stringstream ss;
   ss << amount;
   ss >> amount1;
   cout << "剩余库存:" << endl;
   amount1 = amount1 - num;
   cout << amount1 << endl;
   ss.clear();    //多次使用stringstream时，这段程序不能省略！
   ss << price;
   ss >> price1;
   ss.clear();    //多次使用stringstream时，这段程序不能省略！
   money = price1 * num;
   cout << "总价:" << endl;
   cout << money << endl;

   sprintf_s(a, "%d", amount1);
   amount1_str = a;

   string sql_insert = "update goods set 库存='" + amount1_str + "' where 商品号='" + ID + "';";
   //cout << sql_insert << endl;
   if (!mysql_query(&mysql, sql_insert.c_str())) // 执行SQL语句
   {
    cout << "库存更改成功：" << mysql_error(&mysql) << endl;

   }
   else
   {
    cout << "库存更改失败..." << endl;

   }



  }
  cout << endl;
 }
 //释放结果集
 mysql_free_result(res);
 //关闭数据库
 mysql_close(&mysql);
 //停留等待
 getchar();

}